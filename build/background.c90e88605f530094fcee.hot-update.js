webpackHotUpdate("background",{

/***/ "./src/js/background.js":
/*!******************************!*\
  !*** ./src/js/background.js ***!
  \******************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _img_icon_128_png__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../img/icon-128.png */ \"./src/img/icon-128.png\");\n/* harmony import */ var _img_icon_128_png__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_img_icon_128_png__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _img_icon_34_png__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../img/icon-34.png */ \"./src/img/icon-34.png\");\n/* harmony import */ var _img_icon_34_png__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_img_icon_34_png__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _time_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./time.js */ \"./src/js/time.js\");\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\n\n\n'use strict';\n\n\nlet tableEntry = {};\nvar startTime, endTime;\ninitializeTableEntries();\nupdateTitle();\nupdateLastVisited();\nupdateTimeElapsedOnTabChange();\nconsole.log(chrome.windows.WINDOW_ID_CURRENT);\n\nfunction updateTitle() {\n  chrome.tabs.onUpdated.addListener(function (tabId, changeInfo, tab) {\n    if (changeInfo != undefined && changeInfo.favIconUrl != undefined) {\n      tableEntry[tabId].faviconUrl = changeInfo.favIconUrl;\n      console.log('favicon url onupdated: ', tableEntry[tabId].faviconUrl);\n      chrome.storage.local.set({\n        entries: tableEntry\n      });\n    }\n\n    if (changeInfo != undefined && changeInfo.url != undefined) {\n      tableEntry[tabId].url = changeInfo.url;\n      console.log('yes: ', tableEntry[tabId].url);\n      chrome.storage.local.set({\n        entries: tableEntry\n      });\n    }\n\n    if (changeInfo != undefined && changeInfo.title != undefined) {\n      tableEntry[tabId].title = changeInfo.title;\n      console.log('New title of ', tabId, 'is', tableEntry[tabId].title);\n      chrome.storage.local.set({\n        entries: tableEntry\n      });\n    }\n  });\n}\n\nfunction initializeTableEntries() {\n  chrome.tabs.query({\n    currentWindow: true\n  }, function (arrayOfTabs) {\n    for (const tab of arrayOfTabs) {\n      console.log(\"Query url: \", tab.favIconUrl);\n      tableEntry[tab.id] = {\n        id: tab.id,\n        url: tab.url,\n        faviconUrl: tab.favIconUrl,\n        title: tab.title,\n        timeElapsed: 0,\n        lastVisited: ''\n      };\n      chrome.storage.local.set({\n        entries: tableEntry\n      });\n    }\n  });\n} // Deletes new tabs after a user-specified delay\n\n\nchrome.tabs.onCreated.addListener(function (tab) {\n  tableEntry[tab.id] = {\n    id: tab.id,\n    url: tab.pendingUrl,\n    title: tab.title,\n    timeElapsed: 0,\n    lastVisited: ''\n  };\n  chrome.storage.local.set({\n    entries: tableEntry\n  });\n  chrome.storage.local.get(null, function (results) {\n    if (results.auto_delete_toggle == true) {\n      results.tabsToDelete[tab.id] = new Date().toString();\n      chrome.storage.local.set({\n        tabsToDelete: results.tabsToDelete\n      });\n      console.log('Debug #1 ', tab.id, results.tabsToDelete);\n      delayedDelete(tab.id);\n    }\n  });\n}); // // In the case the user self-deletes the tab before delayedDelete is ran, no errors will be found\n\nchrome.tabs.onRemoved.addListener(function (tabID, removeInfo) {\n  console.log('Removed', tabID, 'from tableEntry. Original data:', tableEntry[tabID]);\n  delete tableEntry[tabID];\n  console.log('Check to see if data is now null:', tableEntry[tabID]);\n  chrome.storage.local.set({\n    entries: tableEntry\n  });\n  chrome.storage.local.get(null, function (results) {\n    if (results.tabsToDelete != undefined && results.tabsToDelete.hasOwnProperty(tabID) && results.auto_delete_toggle == true) {\n      delete results.tabsToDelete[tabID];\n      chrome.storage.local.set({\n        tabsToDelete: results.tabsToDelete\n      });\n    }\n  });\n}); // // Updates the Last Visited column for the current tab\n\nfunction updateLastVisited() {\n  chrome.tabs.onActivated.addListener(function (activeInfo) {\n    let currentTab = activeInfo.tabId;\n\n    if (tableEntry[currentTab] != undefined) {\n      tableEntry[currentTab].lastVisited = dateToString(new Date());\n      chrome.storage.local.set({\n        entries: tableEntry\n      });\n    }\n  });\n} // Updates the Time Elapsed column for the current tab\n\n\nfunction updateTimeElapsedOnTabChange() {\n  chrome.tabs.query({\n    currentWindow: true,\n    active: true\n  }, function (arrayOfTabs) {\n    let previous = arrayOfTabs[0].id;\n    chrome.tabs.onActivated.addListener(function (activeInfo) {\n      console.log(\"----------------------------------Time elapsed onActivated-------------------------------------\");\n      let current = activeInfo.tabId;\n\n      if (tableEntry[previous] != undefined) {\n        console.log('Tab switch triggered -- Previous Tab:', tableEntry[previous].title);\n        tableEntry[previous].timeElapsed = tableEntry[previous].timeElapsed + Object(_time_js__WEBPACK_IMPORTED_MODULE_2__[\"end\"])(endTime, startTime);\n        chrome.storage.local.set({\n          entries: tableEntry\n        });\n      }\n\n      if (tableEntry[current].timeElapsed == undefined) {\n        console.log('Undefined current tab yas -- Title: ', tableEntry[current].title);\n        tableEntry[current].timeElapsed = 0;\n      } else {\n        startTime = Object(_time_js__WEBPACK_IMPORTED_MODULE_2__[\"start\"])();\n        chrome.storage.local.set({\n          entries: tableEntry\n        });\n        previous = current;\n      }\n    });\n  });\n}\n\nfunction delayedDelete(tabID) {\n  let delayedTime;\n  chrome.storage.local.get(null, function (results) {\n    if (results.timeUnit == \"minutes\") {\n      delayedTime = results.auto_delete_time_amount * 60000;\n    }\n\n    ;\n\n    if (results.timeUnit == \"hours\") {\n      delayedTime = results.auto_delete_time_amount * 3600000;\n    }\n\n    ;\n    chrome.storage.local.get(null, function (results) {\n      setTimeout(function () {\n        chrome.storage.local.get(null, function (results) {\n          if (tabID in results.tabsToDelete) {\n            chrome.tabs.remove(tabID);\n          }\n        });\n      }, delayedTime);\n    });\n  });\n}\n\nfunction dateToString(dateObject) {\n  const year = dateObject.getFullYear();\n  const month = dateObject.getMonth() + 1;\n  const day = dateObject.getDate();\n  let hour = dateObject.getHours();\n  let minutes = dateObject.getMinutes();\n  let seconds = dateObject.getSeconds();\n\n  if (dateObject.getHours() < 10) {\n    hour = \"0\" + dateObject.getHours();\n  }\n\n  if (dateObject.getMinutes() < 10) {\n    minutes = \"0\" + dateObject.getMinutes();\n  }\n\n  if (dateObject.getSeconds() < 10) {\n    seconds = \"0\" + dateObject.getSeconds();\n  }\n\n  const formattedDate = month + \"/\" + day + \"/\" + year;\n  const formattedTime = hour + \":\" + minutes + \":\" + seconds;\n  const finishedFormattedString = formattedDate + \", \" + formattedTime;\n  return finishedFormattedString;\n}\n\nlet db = null;\n\nfunction createDataStore() {\n  const request = window.indexedDB.open('MyIndexedDB');\n\n  request.onerrror = function (event) {\n    console.log('Error in opening MyIndexedDB.');\n  };\n\n  request.onupgradeneeded = function (event) {\n    db = event.target.result;\n    let store = db.createObjectStore('bookmarks', {\n      keyPath: 'id',\n      autoIncrement: false\n    });\n\n    store.transaction.oncomplete = function (event) {\n      console.log('Store created.');\n    };\n  };\n\n  request.onsuccess = function (event) {\n    db = event.target.result;\n    console.log('MyIndexedDB opened.');\n  };\n}\n\nfunction deleteDataStore() {\n  const request = window.indexedDB.deleteDatebase('MyIndexedDB');\n\n  request.onerrror = function (event) {\n    console.log('Error in deleting MyIndexedDB.');\n  };\n\n  request.onsuccess = function (event) {\n    console.log('Successful deleting MyIndexedDB.');\n  };\n}\n\nfunction insertRecord(record) {\n  if (db) {\n    const insertTransaction = db.transaction('bookmarks', 'readwrite');\n    const objectStore = insertTransaction.objectStore('bookmarks');\n\n    insertTransaction.oncomplete = function () {\n      console.log('All insert transactions are complete.');\n    };\n\n    insertTransaction.onerror = function () {\n      console.log('Error inserting transactions.');\n    };\n\n    let request = objectStore.add(record);\n\n    request.onsuccess = function (event) {\n      console.log('Successfully added.');\n    };\n  }\n} // Listener for IndexedDB operations\n\n\nchrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\n  // When the user clicks on 'Bookmark' for a row in the Tab Manager\n  if (request.message == 'insert') {\n    insertRecord(request.newBookmark);\n  } // When the user clicks on the 'View Bookmarks' button\n  else if (request.message == 'launch') {\n      console.log('Received Launch');\n      chrome.tabs.create({\n        url: chrome.runtime.getURL('./dashboard.html')\n      });\n    }\n});\ncreateDataStore();\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(tableEntry, \"tableEntry\", \"C:\\\\Users\\\\STP Interlude\\\\Desktop\\\\AntiTabHoarder-Beta\\\\src\\\\js\\\\background.js\");\n  reactHotLoader.register(startTime, \"startTime\", \"C:\\\\Users\\\\STP Interlude\\\\Desktop\\\\AntiTabHoarder-Beta\\\\src\\\\js\\\\background.js\");\n  reactHotLoader.register(endTime, \"endTime\", \"C:\\\\Users\\\\STP Interlude\\\\Desktop\\\\AntiTabHoarder-Beta\\\\src\\\\js\\\\background.js\");\n  reactHotLoader.register(updateTitle, \"updateTitle\", \"C:\\\\Users\\\\STP Interlude\\\\Desktop\\\\AntiTabHoarder-Beta\\\\src\\\\js\\\\background.js\");\n  reactHotLoader.register(initializeTableEntries, \"initializeTableEntries\", \"C:\\\\Users\\\\STP Interlude\\\\Desktop\\\\AntiTabHoarder-Beta\\\\src\\\\js\\\\background.js\");\n  reactHotLoader.register(updateLastVisited, \"updateLastVisited\", \"C:\\\\Users\\\\STP Interlude\\\\Desktop\\\\AntiTabHoarder-Beta\\\\src\\\\js\\\\background.js\");\n  reactHotLoader.register(updateTimeElapsedOnTabChange, \"updateTimeElapsedOnTabChange\", \"C:\\\\Users\\\\STP Interlude\\\\Desktop\\\\AntiTabHoarder-Beta\\\\src\\\\js\\\\background.js\");\n  reactHotLoader.register(delayedDelete, \"delayedDelete\", \"C:\\\\Users\\\\STP Interlude\\\\Desktop\\\\AntiTabHoarder-Beta\\\\src\\\\js\\\\background.js\");\n  reactHotLoader.register(dateToString, \"dateToString\", \"C:\\\\Users\\\\STP Interlude\\\\Desktop\\\\AntiTabHoarder-Beta\\\\src\\\\js\\\\background.js\");\n  reactHotLoader.register(db, \"db\", \"C:\\\\Users\\\\STP Interlude\\\\Desktop\\\\AntiTabHoarder-Beta\\\\src\\\\js\\\\background.js\");\n  reactHotLoader.register(createDataStore, \"createDataStore\", \"C:\\\\Users\\\\STP Interlude\\\\Desktop\\\\AntiTabHoarder-Beta\\\\src\\\\js\\\\background.js\");\n  reactHotLoader.register(deleteDataStore, \"deleteDataStore\", \"C:\\\\Users\\\\STP Interlude\\\\Desktop\\\\AntiTabHoarder-Beta\\\\src\\\\js\\\\background.js\");\n  reactHotLoader.register(insertRecord, \"insertRecord\", \"C:\\\\Users\\\\STP Interlude\\\\Desktop\\\\AntiTabHoarder-Beta\\\\src\\\\js\\\\background.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/background.js\n");

/***/ })

})